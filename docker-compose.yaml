version: "3.3"
networks:
  default:
    driver: bridge
services:
  digitransit-ui:
    container_name: "digitransit-ui"
    image: vlaja/digitransit:digitransit_ui
    depends_on:
      - digitransit-otp
  digitransit-otp:
    container_name: "digitransit-otp"
    image: vlaja/digitransit:digitransit_otp
    volumes:
      - ./data/otp:/opt/opentripplanner/graphs
  nginx:
    container_name: "nginx"
    image: nginx:1.15-alpine
    volumes:
      - ./data/nginx:/etc/nginx/conf.d/
      - ./data/certbot/conf:/etc/letsencrypt/
      - ./data/certbot/www:/var/www/certbot/
    ports:
      - "80:80"
      - "443:443"
    links:
      - digitransit-ui
      - digitransit-otp
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    container_name: "certbot"
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt/
      - ./data/certbot/www:/var/www/certbot/
  services:
    libpostal:
      image: pelias/libpostal-service
      container_name: pelias_libpostal
      restart: always
      ports: ["4400:4400"]
    schema:
      image: pelias/schema:master
      container_name: pelias_schema
      volumes:
        - "./pelias.json:/code/pelias.json"
    api:
      image: pelias/api:master
      container_name: pelias_api
      restart: always
      environment: ["PORT=4000"]
      ports: ["4000:4000"]
      volumes:
        - "./pelias.json:/code/pelias.json"
    placeholder:
      image: pelias/placeholder:master
      container_name: pelias_placeholder
      restart: always
      environment: ["PORT=4100"]
      ports: ["4100:4100"]
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
        - "./blacklist/:/data/blacklist"
    whosonfirst:
      image: pelias/whosonfirst:master
      container_name: pelias_whosonfirst
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
        - "./blacklist/:/data/blacklist"
    openstreetmap:
      image: pelias/openstreetmap:master
      container_name: pelias_openstreetmap
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
        - "./blacklist/:/data/blacklist"
    openaddresses:
      image: pelias/openaddresses:master
      container_name: pelias_openaddresses
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
        - "./blacklist/:/data/blacklist"
    transit:
      image: pelias/transit:master
      container_name: pelias_transit
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
    csv-importer:
      image: pelias/csv-importer:master
      container_name: pelias_csv_importer
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
        - "./blacklist/:/data/blacklist"
    polylines:
      image: pelias/polylines:master
      container_name: pelias_polylines
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
    interpolation:
      image: pelias/interpolation:master
      container_name: pelias_interpolation
      restart: always
      environment: ["PORT=4300"]
      ports: ["4300:4300"]
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
    pip:
      image: pelias/pip-service:master
      container_name: pelias_pip-service
      restart: always
      environment: ["PORT=4200"]
      ports: ["4200:4200"]
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "${DATA_DIR}:/data"
    elasticsearch:
      image: pelias/elasticsearch:6.8.5
      container_name: pelias_elasticsearch
      restart: always
      ports: ["9200:9200", "9300:9300"]
      volumes:
        - "${DATA_DIR}/elasticsearch:/usr/share/elasticsearch/data"
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536
      cap_add: ["IPC_LOCK"]
    fuzzy-tester:
      image: pelias/fuzzy-tester:master
      container_name: pelias_fuzzy_tester
      restart: "no"
      command: "--help"
      volumes:
        - "./pelias.json:/code/pelias.json"
        - "./test_cases:/code/pelias/fuzzy-tester/test_cases"
